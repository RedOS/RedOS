if not fs.exists("u") then fs.makeDir("u") end
term.setTextColor(2^15)
file=fs.open("sys/config","r")
data = file.readAll()
file:close()
sets=textutils.unserialize(data)
if type(sets["city"])=="nil" then
print("Use Celsius as temp. unit? Y/N")
temp=read()
if temp:lower()=="y" then
celsius=true
else
celsius=false
end
print("Use AM/PM? Y/N")
temp=read()
if temp:lower()=="y" then
tFormat=true
else
tFormat=false
end
write("Enter your city name: ")
city=read()
sets["tempUnit"]=celsius
sets["tFormat"]=tFormat
sets["city"]=city
file=fs.open("sys/config","w")
file.write(textutils.serialize(data))
file.close()
end
term.clear()
w,h=term.getSize()
term.setCursorPos(w-8,h/2)
f=fs.open("u/gitget","w")
f.write([[
local args = {...}
args[3] = args[3] or "master"
args[4] = args[4] or ""
if not automated and #args < 2 then
        print("Usage:\n"..shell.getRunningProgram().." <user> <repo> [branch=master] [path=/]") error()
end
local function save(data,file)
        local file = shell.resolve(file)
        if not (fs.exists(string.sub(file,1,#file - #fs.getName(file))) and fs.isDir(string.sub(file,1,#file - #fs.getName(file)))) then
                if fs.exists(string.sub(file,1,#file - #fs.getName(file))) then fs.delete(string.sub(file,1,#file - #fs.getName(file))) end
                fs.makeDir(string.sub(file,1,#file - #fs.getName(file)))
        end
        local f = fs.open(file,"w")
        f.write(data)
        f.close()
end
local function download(url, file)
        save(http.get(url).readAll(),file)
end
if not json then
        print("Downloading JSON api...\n(Credits to ElvishJerricco!)")
        download("http://pastebin.com/raw.php?i=4nRg9CHU","json")
        os.loadAPI("json")
end
if pre_dl then loadstring(pre_dl)() else print("Updating") end
local data = json.decode(http.get("https://api.github.com/repos/"..args[1].."/"..args[2].."/git/trees/"..args[3].."?recursive=1").readAll())
if data.message and data.message == "Not found" then error("Invalid repository",2) else
fs.move("sys/config","db/config")
fs.delete("sys")
	for k,v in pairs(data.tree) do
		-- Make directories
		if v.type == "tree" then
			fs.makeDir(fs.combine(args[4],v.path))
			if not hide_progress then
			end
		end
	end
	for k,v in pairs(data.tree) do
		-- Download files
		if v.type == "blob" then
			download("https://raw.github.com/"..args[1].."/"..args[2].."/"..args[3].."/"..v.path,fs.combine(args[4],v.path))
			if not hide_progress then
			end
		end
	end
end
if post_dl then loadstring(post_dl)() end]])
f.close()
term.setBackgroundColor(1)
term.setTextColor(1)
term.clear()
shell.run("u/gitget","RedOS","RedOS")
fs.move("db/config","sys/config")
term.clear()
os.sleep(0.125)
term.setBackgroundColor(256)
term.clear()
os.sleep(0.125)
term.setBackgroundColor(128)
term.clear()
os.sleep(0.125)
term.setBackgroundColor(2^15)
term.clear()
os.sleep(0.125)
os.reboot()